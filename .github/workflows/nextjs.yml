name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main", "master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      - name: Prepare static routes
        run: |
          echo "Preparing static routes for build..."
          
          # ადმინის გვერდები
          if [ -d "src/app/admin/products/edit/[id]" ]; then
            echo 'export default function Page() { return null; }' > src/app/admin/products/edit/[id]/page.tsx
            echo 'export function generateStaticParams() { return [{id: "placeholder"}]; }' >> src/app/admin/products/edit/[id]/page.tsx
            echo "✅ Fixed admin/products/edit/[id] dynamic route"
          fi
          
          if [ -d "src/app/admin/products/[id]" ]; then
            echo 'export default function Page() { return null; }' > src/app/admin/products/[id]/page.tsx
            echo 'export function generateStaticParams() { return [{id: "placeholder"}]; }' >> src/app/admin/products/[id]/page.tsx
            echo "✅ Fixed admin/products/[id] dynamic route"
          fi
          
          # პროდუქტის გვერდი - ფიქსირებული ID-ებით
          # ვამოწმებთ თუ არსებობს უკვე generateStaticParams ფუნქცია
          if [ -d "src/app/shop/product/[id]" ]; then
            if ! grep -q "generateStaticParams" src/app/shop/product/[id]/page.tsx; then
              echo "ℹ️ Adding generateStaticParams to product detail page"
              # დროებით ფაილში შევინახოთ მოდიფიცირებული შიგთავსი
              cat > src/app/shop/product/[id]/page.temp << 'EOF'
import { getProductById } from '@/lib/firebase-service';
import { cache } from 'react';
import ProductDetailClient from './client';

// გადავაკეშოთ შედეგი რომ არ მოხდეს მრავალჯერადი მოთხოვნა
const getProduct = cache(async (id: string) => {
  return await getProductById(id);
});

// დინამიური პარამეტრები
export const dynamicParams = true;

// ფიქსირებული პროდუქტების ID-ები სტატიკური გვერდებისთვის
export function generateStaticParams() {
  return [
    { id: "rkVZ1tYjku6SSjRXLIpw" },
    { id: "K3J3kfOcvW4Q32O6PsQO" },
    { id: "CyPeQlm4lKBCy4p3IyPI" },
    { id: "Kz6AhKS52Cj3G4zCxINi" },
    { id: "vnzapH1bpu9fiWtXhGAI" },
    { id: "xAl4tjHYDaSj1SqY7fws" },
    { id: "kxmyaIWawvglUxWsRf6s" },
    { id: "kwERjuedjengfm1PuJnT" },
    { id: "oLJgXQd2BmJf6Zzk7MdC" },
    { id: "0s6osYbIE1RlQGgzi6ky" },
    { id: "fvSN8QZazRtek6avxE2z" },
    { id: "aqoKz04y5BdaYVfAjR6M" },
    { id: "placeholder" }
  ];
}

// სერვერის მხარეს default ფუნქცია
export default function ProductDetailPage({ params }: { params: { id: string } }) {
  // პარამეტრების მიღება მარშრუტიდან
  const routeId = params.id;
  
  // კლიენტის კომპონენტის დაბრუნება ID-ის გადაცემით
  return <ProductDetailClient id={routeId} />;
}
EOF
              # ჩავანაცვლოთ ორიგინალი ფაილი
              mv src/app/shop/product/[id]/page.temp src/app/shop/product/[id]/page.tsx
              echo "✅ Added generateStaticParams to product page"
            else
              echo "✅ generateStaticParams already exists in product page"
            fi
          fi
      - name: Create .nojekyll file
        run: |
          mkdir -p out
          touch out/.nojekyll
          echo "✅ Created .nojekyll file"
      - name: Build application
        run: npm run build
      - name: Upload artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 