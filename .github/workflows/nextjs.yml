name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main", "master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      - name: Update config to include output:export
        run: |
          echo "Updated config to add output:export"
          sed -i 's/\/\/ output: .export./output: "export",/' next.config.js
          cat next.config.js
      - name: Disable dynamic routes for [id] pages
        run: |
          # დროებით წაშალეთ ან მოდიფიკაცია გაუკეთეთ დინამიურ გვერდებს
          echo "Disabling dynamic routes that cause problems in static export"
          if [ -f "src/app/admin/products/[id]/page.tsx" ]; then
            mv src/app/admin/products/[id]/page.tsx src/app/admin/products/[id]/page.tsx.bak
            echo "export default function Page() { return null; }" > src/app/admin/products/[id]/page.tsx
          fi
          if [ -f "src/app/admin/products/edit/[id]/page.tsx" ]; then
            mv src/app/admin/products/edit/[id]/page.tsx src/app/admin/products/edit/[id]/page.tsx.bak 
            echo "export default function Page() { return null; }" > src/app/admin/products/edit/[id]/page.tsx
          fi
          
          # ეს შეზღუდვა ვრცელდება ყველა დინამიურ როუტერზე, რომელიც იყენებს generateStaticParams()
          find src/app -type d -name "[*]" -o -name "(*)" -o -name "{*}" | while read -r dir; do
            if [ -f "$dir/page.tsx" ]; then
              # შევამოწმოთ თუ ფაილი შეიცავს გენერატეს
              if grep -q "generateStaticParams" "$dir/page.tsx"; then
                echo "Simplifying dynamic route in $dir/page.tsx"
                mv "$dir/page.tsx" "$dir/page.tsx.bak"
                echo "export default function Page() { return null; }" > "$dir/page.tsx"
              fi
            fi
          done
      - name: Build with Next.js
        run: npm run build
      - name: Debug output directory
        run: |
          echo "Output directory structure:"
          ls -la
          find . -name "out" -type d
          if [ -d "out" ]; then
            ls -la out
          fi
      - name: Fix routes for GitHub Pages
        run: |
          if [ ! -d "out" ]; then
            echo "Creating out directory"
            mkdir -p out
          fi
          
          # Create .nojekyll file
          touch out/.nojekyll
          
          # Check if we need to copy files from out/shop to out
          if [ -d "out/shop" ]; then
            echo "Copying contents from out/shop to out root"
            cp -r out/shop/* out/
          fi
          
          # Create 404 page if needed
          if [ ! -f "out/404.html" ]; then
            if [ -f "out/index.html" ]; then
              cp out/index.html out/404.html
              echo "Created 404.html from index.html"
            else
              echo "No index.html found, could not create 404.html"
            fi
          fi
          
          # მთავარი index.html ფაილის კოპირება
          echo '<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>OnLyne Shop - გადამისამართება...</title>
    <!-- შევცვალეთ მყისიერი გადამისამართება (0) 3 წამიანით (3) -->
    <meta http-equiv="refresh" content="3;url=/shop/" />
    <style>
      body {
        font-family: Arial, sans-serif;
        text-align: center;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f5f5f5;
      }
      .container {
        max-width: 600px;
        padding: 30px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      }
      h1 {
        color: #333;
        margin-bottom: 20px;
      }
      p {
        margin-bottom: 30px;
        color: #666;
      }
      a {
        display: inline-block;
        padding: 10px 20px;
        background-color: #4a90e2;
        color: white;
        text-decoration: none;
        border-radius: 5px;
        font-weight: bold;
      }
      a:hover {
        background-color: #3a80d2;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>გადამისამართება მაღაზიაზე...</h1>
      <p>თქვენ ავტომატურად გადამისამართდებით 3 წამში.<br>თუ ავტომატური გადამისამართება არ მუშაობს, დააჭირეთ ქვემოთ მოცემულ ღილაკს:</p>
      <a href="/shop/">მაღაზიაზე გადასვლა</a>
    </div>
  </body>
</html>' > out/index.html
          echo "Created redirect index.html in root directory"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 